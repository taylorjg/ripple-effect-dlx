{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ramda/es/internal/_xfBase.js","webpack:///./node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/ramda/es/curryN.js","webpack:///./node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/ramda/es/map.js","webpack:///./node_modules/ramda/es/keys.js","webpack:///./node_modules/ramda/es/slice.js","webpack:///./node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ramda/es/nth.js","webpack:///./node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/ramda/es/internal/_flatCat.js","webpack:///./node_modules/ramda/es/internal/_forceReduced.js","webpack:///./node_modules/ramda/es/internal/_xchain.js","webpack:///./node_modules/ramda/es/chain.js","webpack:///./node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/ramda/es/filter.js","webpack:///./node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/ramda/es/internal/_isNumber.js","webpack:///./node_modules/ramda/es/F.js","webpack:///./node_modules/ramda/es/T.js","webpack:///./node_modules/ramda/es/__.js","webpack:///./node_modules/ramda/es/add.js","webpack:///./node_modules/ramda/es/addIndex.js","webpack:///./node_modules/ramda/es/adjust.js","webpack:///./node_modules/ramda/es/internal/_reduced.js","webpack:///./node_modules/ramda/es/internal/_xall.js","webpack:///./node_modules/ramda/es/all.js","webpack:///./node_modules/ramda/es/max.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/prop.js","webpack:///./node_modules/ramda/es/pluck.js","webpack:///./node_modules/ramda/es/allPass.js","webpack:///./node_modules/ramda/es/always.js","webpack:///./node_modules/ramda/es/and.js","webpack:///./node_modules/ramda/es/internal/_xany.js","webpack:///./node_modules/ramda/es/any.js","webpack:///./node_modules/ramda/es/anyPass.js","webpack:///./node_modules/ramda/es/ap.js","webpack:///./node_modules/ramda/es/internal/_aperture.js","webpack:///./node_modules/ramda/es/internal/_xaperture.js","webpack:///./node_modules/ramda/es/aperture.js","webpack:///./node_modules/ramda/es/apply.js","webpack:///./node_modules/ramda/es/values.js","webpack:///./node_modules/ramda/es/applySpec.js","webpack:///./node_modules/ramda/es/applyTo.js","webpack:///./node_modules/ramda/es/ascend.js","webpack:///./node_modules/ramda/es/assoc.js","webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/isNil.js","webpack:///./node_modules/ramda/es/assocPath.js","webpack:///./node_modules/ramda/es/nAry.js","webpack:///./node_modules/ramda/es/binary.js","webpack:///./node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/ramda/es/liftN.js","webpack:///./node_modules/ramda/es/lift.js","webpack:///./node_modules/ramda/es/both.js","webpack:///./node_modules/ramda/es/curry.js","webpack:///./node_modules/ramda/es/call.js","webpack:///./node_modules/ramda/es/clamp.js","webpack:///./node_modules/ramda/es/internal/_cloneRegExp.js","webpack:///./node_modules/ramda/es/type.js","webpack:///./node_modules/ramda/es/internal/_clone.js","webpack:///./node_modules/ramda/es/clone.js","webpack:///./node_modules/ramda/es/comparator.js","webpack:///./node_modules/ramda/es/not.js","webpack:///./node_modules/ramda/es/complement.js","webpack:///./node_modules/ramda/es/reverse.js","webpack:///./node_modules/ramda/es/compose.js","webpack:///./node_modules/ramda/es/composeK.js","webpack:///./node_modules/ramda/es/internal/_pipeP.js","webpack:///./node_modules/ramda/es/pipeP.js","webpack:///./node_modules/ramda/es/composeP.js","webpack:///./node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/ramda/es/identity.js","webpack:///./node_modules/ramda/es/pipeWith.js","webpack:///./node_modules/ramda/es/composeWith.js","webpack:///./node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/ramda/es/internal/_includesWith.js","webpack:///./node_modules/ramda/es/internal/_objectIs.js","webpack:///./node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/ramda/es/equals.js","webpack:///./node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/ramda/es/internal/_includes.js","webpack:///./node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/ramda/es/reject.js","webpack:///./node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/ramda/es/toString.js","webpack:///./node_modules/ramda/es/concat.js","webpack:///./node_modules/ramda/es/cond.js","webpack:///./node_modules/ramda/es/constructN.js","webpack:///./node_modules/ramda/es/construct.js","webpack:///./node_modules/ramda/es/contains.js","webpack:///./node_modules/ramda/es/converge.js","webpack:///./node_modules/ramda/es/internal/_xreduceBy.js","webpack:///./node_modules/ramda/es/reduceBy.js","webpack:///./node_modules/ramda/es/countBy.js","webpack:///./node_modules/ramda/es/dec.js","webpack:///./node_modules/ramda/es/defaultTo.js","webpack:///./node_modules/ramda/es/descend.js","webpack:///./node_modules/ramda/es/internal/_Set.js","webpack:///./node_modules/ramda/es/difference.js","webpack:///./node_modules/ramda/es/differenceWith.js","webpack:///./node_modules/ramda/es/dissoc.js","webpack:///./node_modules/ramda/es/remove.js","webpack:///./node_modules/ramda/es/update.js","webpack:///./node_modules/ramda/es/dissocPath.js","webpack:///./node_modules/ramda/es/divide.js","webpack:///./node_modules/ramda/es/internal/_xdrop.js","webpack:///./node_modules/ramda/es/drop.js","webpack:///./node_modules/ramda/es/internal/_xtake.js","webpack:///./node_modules/ramda/es/take.js","webpack:///./node_modules/ramda/es/internal/_dropLast.js","webpack:///./node_modules/ramda/es/internal/_xdropLast.js","webpack:///./node_modules/ramda/es/dropLast.js","webpack:///./node_modules/ramda/es/internal/_dropLastWhile.js","webpack:///./node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/ramda/es/dropLastWhile.js","webpack:///./node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ramda/es/last.js","webpack:///./node_modules/ramda/es/dropRepeatsWith.js","webpack:///./node_modules/ramda/es/dropRepeats.js","webpack:///./node_modules/ramda/es/internal/_xdropWhile.js","webpack:///./node_modules/ramda/es/dropWhile.js","webpack:///./node_modules/ramda/es/or.js","webpack:///./node_modules/ramda/es/either.js","webpack:///./node_modules/ramda/es/empty.js","webpack:///./node_modules/ramda/es/takeLast.js","webpack:///./node_modules/ramda/es/endsWith.js","webpack:///./node_modules/ramda/es/eqBy.js","webpack:///./node_modules/ramda/es/eqProps.js","webpack:///./node_modules/ramda/es/evolve.js","webpack:///./node_modules/ramda/es/internal/_xfind.js","webpack:///./node_modules/ramda/es/find.js","webpack:///./node_modules/ramda/es/internal/_xfindIndex.js","webpack:///./node_modules/ramda/es/findIndex.js","webpack:///./node_modules/ramda/es/internal/_xfindLast.js","webpack:///./node_modules/ramda/es/findLast.js","webpack:///./node_modules/ramda/es/internal/_xfindLastIndex.js","webpack:///./node_modules/ramda/es/findLastIndex.js","webpack:///./node_modules/ramda/es/flatten.js","webpack:///./node_modules/ramda/es/flip.js","webpack:///./node_modules/ramda/es/forEach.js","webpack:///./node_modules/ramda/es/forEachObjIndexed.js","webpack:///./node_modules/ramda/es/fromPairs.js","webpack:///./node_modules/ramda/es/groupBy.js","webpack:///./node_modules/ramda/es/groupWith.js","webpack:///./node_modules/ramda/es/gt.js","webpack:///./node_modules/ramda/es/gte.js","webpack:///./node_modules/ramda/es/hasPath.js","webpack:///./node_modules/ramda/es/has.js","webpack:///./node_modules/ramda/es/hasIn.js","webpack:///./node_modules/ramda/es/identical.js","webpack:///./node_modules/ramda/es/ifElse.js","webpack:///./node_modules/ramda/es/inc.js","webpack:///./node_modules/ramda/es/includes.js","webpack:///./node_modules/ramda/es/indexBy.js","webpack:///./node_modules/ramda/es/indexOf.js","webpack:///./node_modules/ramda/es/init.js","webpack:///./node_modules/ramda/es/innerJoin.js","webpack:///./node_modules/ramda/es/insert.js","webpack:///./node_modules/ramda/es/insertAll.js","webpack:///./node_modules/ramda/es/uniqBy.js","webpack:///./node_modules/ramda/es/uniq.js","webpack:///./node_modules/ramda/es/intersection.js","webpack:///./node_modules/ramda/es/intersperse.js","webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/objOf.js","webpack:///./node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/ramda/es/into.js","webpack:///./node_modules/ramda/es/invert.js","webpack:///./node_modules/ramda/es/invertObj.js","webpack:///./node_modules/ramda/es/invoker.js","webpack:///./node_modules/ramda/es/is.js","webpack:///./node_modules/ramda/es/isEmpty.js","webpack:///./node_modules/ramda/es/join.js","webpack:///./node_modules/ramda/es/juxt.js","webpack:///./node_modules/ramda/es/keysIn.js","webpack:///./node_modules/ramda/es/lastIndexOf.js","webpack:///./node_modules/ramda/es/length.js","webpack:///./node_modules/ramda/es/lens.js","webpack:///./node_modules/ramda/es/lensIndex.js","webpack:///./node_modules/ramda/es/lensPath.js","webpack:///./node_modules/ramda/es/lensProp.js","webpack:///./node_modules/ramda/es/lt.js","webpack:///./node_modules/ramda/es/lte.js","webpack:///./node_modules/ramda/es/mapAccum.js","webpack:///./node_modules/ramda/es/mapAccumRight.js","webpack:///./node_modules/ramda/es/mapObjIndexed.js","webpack:///./node_modules/ramda/es/match.js","webpack:///./node_modules/ramda/es/mathMod.js","webpack:///./node_modules/ramda/es/maxBy.js","webpack:///./node_modules/ramda/es/sum.js","webpack:///./node_modules/ramda/es/mean.js","webpack:///./node_modules/ramda/es/median.js","webpack:///./node_modules/ramda/es/memoizeWith.js","webpack:///./node_modules/ramda/es/merge.js","webpack:///./node_modules/ramda/es/mergeAll.js","webpack:///./node_modules/ramda/es/mergeWithKey.js","webpack:///./node_modules/ramda/es/mergeDeepWithKey.js","webpack:///./node_modules/ramda/es/mergeDeepLeft.js","webpack:///./node_modules/ramda/es/mergeDeepRight.js","webpack:///./node_modules/ramda/es/mergeDeepWith.js","webpack:///./node_modules/ramda/es/mergeLeft.js","webpack:///./node_modules/ramda/es/mergeRight.js","webpack:///./node_modules/ramda/es/mergeWith.js","webpack:///./node_modules/ramda/es/min.js","webpack:///./node_modules/ramda/es/minBy.js","webpack:///./node_modules/ramda/es/modulo.js","webpack:///./node_modules/ramda/es/move.js","webpack:///./node_modules/ramda/es/multiply.js","webpack:///./node_modules/ramda/es/negate.js","webpack:///./node_modules/ramda/es/none.js","webpack:///./node_modules/ramda/es/nthArg.js","webpack:///./node_modules/ramda/es/o.js","webpack:///./node_modules/ramda/es/internal/_of.js","webpack:///./node_modules/ramda/es/of.js","webpack:///./node_modules/ramda/es/omit.js","webpack:///./node_modules/ramda/es/once.js","webpack:///./node_modules/ramda/es/internal/_assertPromise.js","webpack:///./node_modules/ramda/es/otherwise.js","webpack:///./node_modules/ramda/es/over.js","webpack:///./node_modules/ramda/es/pair.js","webpack:///./node_modules/ramda/es/internal/_createPartialApplicator.js","webpack:///./node_modules/ramda/es/partial.js","webpack:///./node_modules/ramda/es/partialRight.js","webpack:///./node_modules/ramda/es/partition.js","webpack:///./node_modules/ramda/es/pathEq.js","webpack:///./node_modules/ramda/es/pathOr.js","webpack:///./node_modules/ramda/es/pathSatisfies.js","webpack:///./node_modules/ramda/es/pick.js","webpack:///./node_modules/ramda/es/pickAll.js","webpack:///./node_modules/ramda/es/pickBy.js","webpack:///./node_modules/ramda/es/pipeK.js","webpack:///./node_modules/ramda/es/prepend.js","webpack:///./node_modules/ramda/es/product.js","webpack:///./node_modules/ramda/es/useWith.js","webpack:///./node_modules/ramda/es/project.js","webpack:///./node_modules/ramda/es/propEq.js","webpack:///./node_modules/ramda/es/propIs.js","webpack:///./node_modules/ramda/es/propOr.js","webpack:///./node_modules/ramda/es/propSatisfies.js","webpack:///./node_modules/ramda/es/props.js","webpack:///./node_modules/ramda/es/reduceRight.js","webpack:///./node_modules/ramda/es/reduceWhile.js","webpack:///./node_modules/ramda/es/reduced.js","webpack:///./node_modules/ramda/es/times.js","webpack:///./node_modules/ramda/es/repeat.js","webpack:///./node_modules/ramda/es/replace.js","webpack:///./node_modules/ramda/es/scan.js","webpack:///./node_modules/ramda/es/sequence.js","webpack:///./node_modules/ramda/es/set.js","webpack:///./node_modules/ramda/es/sort.js","webpack:///./node_modules/ramda/es/sortBy.js","webpack:///./node_modules/ramda/es/sortWith.js","webpack:///./node_modules/ramda/es/split.js","webpack:///./node_modules/ramda/es/splitAt.js","webpack:///./node_modules/ramda/es/splitEvery.js","webpack:///./node_modules/ramda/es/splitWhen.js","webpack:///./node_modules/ramda/es/startsWith.js","webpack:///./node_modules/ramda/es/subtract.js","webpack:///./node_modules/ramda/es/symmetricDifference.js","webpack:///./node_modules/ramda/es/symmetricDifferenceWith.js","webpack:///./node_modules/ramda/es/takeLastWhile.js","webpack:///./node_modules/ramda/es/internal/_xtakeWhile.js","webpack:///./node_modules/ramda/es/takeWhile.js","webpack:///./node_modules/ramda/es/internal/_xtap.js","webpack:///./node_modules/ramda/es/tap.js","webpack:///./node_modules/ramda/es/test.js","webpack:///./node_modules/ramda/es/internal/_isRegExp.js","webpack:///./node_modules/ramda/es/then.js","webpack:///./node_modules/ramda/es/toLower.js","webpack:///./node_modules/ramda/es/toPairs.js","webpack:///./node_modules/ramda/es/toPairsIn.js","webpack:///./node_modules/ramda/es/toUpper.js","webpack:///./node_modules/ramda/es/transduce.js","webpack:///./node_modules/ramda/es/transpose.js","webpack:///./node_modules/ramda/es/traverse.js","webpack:///./node_modules/ramda/es/trim.js","webpack:///./node_modules/ramda/es/tryCatch.js","webpack:///./node_modules/ramda/es/unapply.js","webpack:///./node_modules/ramda/es/unary.js","webpack:///./node_modules/ramda/es/uncurryN.js","webpack:///./node_modules/ramda/es/unfold.js","webpack:///./node_modules/ramda/es/union.js","webpack:///./node_modules/ramda/es/uniqWith.js","webpack:///./node_modules/ramda/es/unionWith.js","webpack:///./node_modules/ramda/es/unless.js","webpack:///./node_modules/ramda/es/unnest.js","webpack:///./node_modules/ramda/es/until.js","webpack:///./node_modules/ramda/es/valuesIn.js","webpack:///./node_modules/ramda/es/view.js","webpack:///./node_modules/ramda/es/when.js","webpack:///./node_modules/ramda/es/where.js","webpack:///./node_modules/ramda/es/whereEq.js","webpack:///./node_modules/ramda/es/without.js","webpack:///./node_modules/ramda/es/xprod.js","webpack:///./node_modules/ramda/es/zip.js","webpack:///./node_modules/ramda/es/zipObj.js","webpack:///./node_modules/ramda/es/zipWith.js","webpack:///./node_modules/ramda/es/thunkify.js","webpack:///./node_modules/ramda/es/index.js","webpack:///./node_modules/ramda/es/bind.js","webpack:///./node_modules/ramda/es/head.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/ramda/es/internal/_makeFlat.js","webpack:///./common/samplePuzzles.js","webpack:///./node_modules/ramda/es/append.js","webpack:///./node_modules/ramda/es/range.js","webpack:///./common/parsePuzzle.js","webpack:///./common/solve.js","webpack:///./node_modules/dlxlib/lib/index.js","webpack:///./node_modules/events/events.js","webpack:///./web/boundaryUtils.js","webpack:///./web/svg.js","webpack:///./web/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_curry2","_curry1_js__WEBPACK_IMPORTED_MODULE_0__","_isPlaceholder_js__WEBPACK_IMPORTED_MODULE_1__","fn","f2","a","b","arguments","length","_b","_a","_curry1","_isPlaceholder_js__WEBPACK_IMPORTED_MODULE_0__","f1","apply","this","_curry3","_curry2_js__WEBPACK_IMPORTED_MODULE_1__","_isPlaceholder_js__WEBPACK_IMPORTED_MODULE_2__","f3","_c","init","xf","result","_dispatchable","_isArray_js__WEBPACK_IMPORTED_MODULE_0__","_isTransformer_js__WEBPACK_IMPORTED_MODULE_1__","methodNames","args","Array","slice","obj","pop","idx","transducer","_internal_arity_js__WEBPACK_IMPORTED_MODULE_0__","_internal_curry1_js__WEBPACK_IMPORTED_MODULE_1__","_internal_curry2_js__WEBPACK_IMPORTED_MODULE_2__","_internal_curryN_js__WEBPACK_IMPORTED_MODULE_3__","curryN","_has","prop","_isPlaceholder","_reduce","_isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__","_xwrap_js__WEBPACK_IMPORTED_MODULE_1__","_bind_js__WEBPACK_IMPORTED_MODULE_2__","_iterableReduce","acc","iter","step","next","done","_methodReduce","methodName","symIterator","iterator","list","len","_arrayReduce","reduce","TypeError","_xmap_XMap","XMap","f","_xfBase","input","internal_xmap","map_map","functor","toString","keys","_map","_internal_curry1_js__WEBPACK_IMPORTED_MODULE_0__","_internal_has_js__WEBPACK_IMPORTED_MODULE_1__","_internal_isArguments_js__WEBPACK_IMPORTED_MODULE_2__","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","_internal_checkForMethod_js__WEBPACK_IMPORTED_MODULE_0__","_internal_curry3_js__WEBPACK_IMPORTED_MODULE_1__","fromIndex","toIndex","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_concat","set1","set2","len1","len2","_internal_curry3_js__WEBPACK_IMPORTED_MODULE_0__","_internal_reduce_js__WEBPACK_IMPORTED_MODULE_1__","isArray","val","_isString","x","_internal_curry2_js__WEBPACK_IMPORTED_MODULE_0__","_internal_isString_js__WEBPACK_IMPORTED_MODULE_1__","nth","offset","charAt","_checkForMethod","methodname","_isArray_js__WEBPACK_IMPORTED_MODULE_1__","_isString_js__WEBPACK_IMPORTED_MODULE_2__","_isArrayLike","nodeType","_slice_js__WEBPACK_IMPORTED_MODULE_2__","tail","Infinity","_curryN","_arity_js__WEBPACK_IMPORTED_MODULE_0__","received","combined","argsIdx","left","combinedIdx","_isObject","internal_flatCat","rxf","@@transducer/init","@@transducer/result","@@transducer/step","ret","@@transducer/value","@@transducer/reduced","preservingReduced","internal_xchain","map","chain_chain","monad","_makeFlat","_xfilter_XFilter","XFilter","internal_xfilter","filter","pred","filterable","_filter","_isTransformer","_isNumber","es_F","es_T","_","@@functional/placeholder","es_add","Number","es_addIndex","origFn","es_adjust","_idx","_list","_reduced","_xall_XAll","XAll","all","internal_xall","es_all","es_max","es_path","paths","es_prop","es_pluck","es_allPass","preds","es_always","es_and","_xany_XAny","XAny","any","internal_xany","es_any","es_anyPass","es_ap","applyF","applyX","ap","_aperture","limit","_xaperture_XAperture","XAperture","pos","full","store","getCopy","internal_xaperture","es_aperture","es_apply","es_values","props","es_keys","vals","mapValues","es_applySpec","applySpec","spec","v","es_applyTo","es_ascend","aa","bb","es_assoc","_isInteger","isInteger","es_isNil","es_assocPath","assocPath","path","nextObj","_isArray","arr","concat","es_nAry","es_binary","_isFunction","es_liftN","arity","lifted","es_lift","es_both","g","es_curry","es_call","es_clamp","min","max","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","es_type","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","es_clone","clone","es_comparator","es_not","es_complement","es_reverse","split","reverse","join","compose","pipe","composeK","last","chain","_pipeP","ctx","then","pipeP","es_tail","composeP","_identity","es_identity","es_pipeWith","headList","es_head","tailList","es_composeWith","_arrayFromIterator","push","_includesWith","internal_objectIs","is","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","match","String","_functionName","message","size","entries","values","keysA","extendedStackA","extendedStackB","es_equals","_indexOf","inf","indexOf","_includes","_quote","replace","pad","internal_toISOString","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","es_reject","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","es_toString","es_concat","es_cond","pairs","pair","es_constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","es_construct","es_contains","es_converge","after","fns","context","_xreduceBy_XReduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","internal_xreduceBy","es_reduceBy","elt","es_countBy","elem","es_dec","es_defaultTo","es_descend","hasOrAdd","shouldAdd","set","prevSize","type","_items","_nativeSet","add","has","bIdx","internal_Set","_Set","Set","es_difference","first","second","out","firstLen","secondLen","toFilterOut","es_differenceWith","es_dissoc","es_remove","start","count","splice","es_update","es_dissocPath","dissocPath","head","es_divide","_xdrop_XDrop","XDrop","internal_xdrop","es_drop","Math","_xtake_XTake","XTake","internal_xtake","es_take","dropLast","_xdropLast_XDropLast","XDropLast","internal_xdropLast","es_dropLast","dropLastWhile","_xdropLastWhile_XDropLastWhile","XDropLastWhile","retained","retain","flush","internal_xdropLastWhile","es_dropLastWhile","_xdropRepeatsWith_XDropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","internal_xdropRepeatsWith","es_last","es_dropRepeatsWith","es_dropRepeats","_xdropWhile_XDropWhile","XDropWhile","internal_xdropWhile","es_dropWhile","es_or","es_either","es_empty","empty","_isArguments","es_takeLast","es_endsWith","suffix","es_eqBy","es_eqProps","obj1","obj2","es_evolve","evolve","transformations","transformation","_xfind_XFind","XFind","found","internal_xfind","es_find","_xfindIndex_XFindIndex","XFindIndex","internal_xfindIndex","es_findIndex","_xfindLast_XFindLast","XFindLast","internal_xfindLast","es_findLast","_xfindLastIndex_XFindLastIndex","XFindLastIndex","lastIdx","internal_xfindLastIndex","es_findLastIndex","es_flatten","es_flip","es_forEach","es_forEachObjIndexed","keyList","es_fromPairs","es_groupBy","es_groupWith","res","nextidx","es_gt","es_gte","es_hasPath","_path","es_has","es_hasIn","es_identical","es_ifElse","condition","onTrue","onFalse","es_inc","es_includes","es_indexBy","es_indexOf","target","es_init","es_innerJoin","ys","es_insert","es_insertAll","elts","es_uniqBy","appliedItem","es_uniq","es_intersection","list1","list2","lookupList","filteredList","es_intersperse","separator","internal_objectAssign","assign","output","nextKey","es_objOf","_stepCatArray","_stepCatString","_stepCatObject","es_into","_stepCat","es_invert","es_invertObj","es_invoker","method","es_is","Ctor","es_isEmpty","es_join","es_juxt","es_keysIn","es_lastIndexOf","lastIndexOf","es_length","es_lens","setter","toFunctorFn","focus","es_lensIndex","es_lensPath","es_lensProp","es_lt","es_lte","es_mapAccum","tuple","es_mapAccumRight","es_mapObjIndexed","es_match","rx","str","es_mathMod","es_maxBy","es_sum","es_mean","es_median","width","es_memoizeWith","mFn","cache","es_merge","es_mergeAll","es_mergeWithKey","es_mergeDeepWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","es_mergeDeepLeft","es_mergeDeepRight","es_mergeDeepWith","es_mergeLeft","es_mergeRight","es_mergeWith","_l","_r","es_min","es_minBy","es_modulo","es_move","from","to","positiveFrom","positiveTo","es_multiply","es_negate","es_none","es_nthArg","es_o","_of","es_of","es_omit","names","index","es_once","called","_assertPromise","es_otherwise","Identity","es_over","lens","es_pair","fst","snd","_createPartialApplicator","es_partial","es_partialRight","es_partition","es_pathEq","es_pathOr","es_pathSatisfies","propPath","es_pick","es_pickAll","es_pickBy","pipeK","es_prepend","el","es_product","es_useWith","transformers","es_project","es_propEq","es_propIs","es_propOr","es_propSatisfies","es_props","ps","es_reduceRight","es_reduceWhile","es_reduced","es_times","RangeError","es_repeat","es_replace","regex","replacement","es_scan","es_sequence","of","traversable","sequence","es_set","es_sort","comparator","es_sortBy","es_sortWith","es_split","es_splitAt","array","es_splitEvery","es_splitWhen","prefix","es_startsWith","es_subtract","es_symmetricDifference","es_symmetricDifferenceWith","es_takeLastWhile","_xtakeWhile_XTakeWhile","XTakeWhile","internal_xtakeWhile","es_takeWhile","_xtap_XTap","XTap","internal_xtap","es_tap","es_test","es_then","es_toLower","es_toPairs","es_toPairsIn","es_toUpper","es_transduce","_xwrap","es_transpose","outerlist","innerlist","j","es_traverse","ws","es_trim","trim","beginRx","endRx","es_tryCatch","tryer","catcher","e","es_unapply","es_unary","es_uncurryN","depth","endIdx","currentDepth","es_unfold","seed","es_union","es_uniqWith","es_unionWith","es_unless","whenFalseFn","es_unnest","es_until","es_valuesIn","vs","Const","fantasy-land/map","es_view","es_when","whenTrueFn","es_where","testObj","es_whereEq","es_without","es_xprod","ilen","jlen","es_zip","rv","es_zipObj","es_zipWith","es_thunkify","fnArgs","append","range","_internal_curry2_js__WEBPACK_IMPORTED_MODULE_1__","thisObj","_nth_js__WEBPACK_IMPORTED_MODULE_0__","_pipe","XWrap","_has_js__WEBPACK_IMPORTED_MODULE_0__","recursive","flatt","SAMPLE_PUZZLE_8x8","SAMPLE_PUZZLE_10x10","_internal_concat_js__WEBPACK_IMPORTED_MODULE_0__","_internal_isNumber_js__WEBPACK_IMPORTED_MODULE_1__","R","parsePuzzle","lines","splitLines","line","height","cells","cellString","id","initialValueString","initialValue","coords","groupedCells","groupBy","cell","rooms","Dlx","buildRows","buildRowsForRoom","room","emptyCells","occupiedCells","partition","isNil","rowsForOccupiedCells","isInitialValue","initialValues","allValues","inc","remainingValues","difference","rowsForEmptyCells","buildMatrix","puzzle","rows","row","buildMatrixRow","makeLocationColumns","makeRoomColumns","makeRippleColumns","locationIndex","roomIndex","findIndex","previousRoomSizes","take","roomValueIndex","sum","roomSizes","maxRoomSize","makeRippleColumnsForValue","makeRippleColumnsForValueAndDirection","UP","DOWN","LEFT","RIGHT","direction","rippleIndices","calculateRippleIndices","includes","isCellInGrid","resolveRowIndices","rowIndices","rowIndex","solve","onSearchStep","onSolutionFound","matrix","dlx","on","partialSolution","stepIndex","solution","solutionIndex","options","numPrimaryColumns","DataObject","[object Object]","listHeader","up","down","right","addDataObject","dataObject","loop","propName","ColumnObject","super","previousColumnObject","nextColumnObject","numberOfRows","columnObject","appendToColumn","unlinkFromColumn","relinkIntoColumn","EventEmitter","defaultOptions","numSolutions","MAX_SAFE_INTEGER","actualOptions","generator","solutionGenerator","solutions","iteratorResult","root","buildInternalStructure","searchState","SearchState","search","searchStep","isEmpty","currentSolution","solutionFound","chooseColumnWithFewestRows","coverColumn","pushRowIndex","loopRight","loopLeft","uncoverColumn","popRowIndex","colIndexToListHeader","Map","forEach","firstDataObjectInThisRow","col","colIndex","appendColumnHeader","appendToRow","chosenColumn","loopNext","column","unlinkColumnHeader","loopDown","unlinkDataObject","loopUp","relinkDataObject","relinkColumnHeader","emit","factory","ReflectOwnKeys","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","listener","prepend","events","existing","warning","newListener","unshift","warned","w","emitter","console","warn","_onceWrap","state","fired","wrapFn","wrapped","removeListener","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arg","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","handler","listeners","addListener","prependListener","once","prependOnceListener","position","originalListener","shift","spliceOne","off","removeAllListeners","rawListeners","eventNames","samePoint","p1","p2","sameLine","l1","l2","reverseLine","lineDirection","calculateBoundary","location","tl","tr","br","bl","line1","line2","countOccurrencesOfLine","currentLine","otherPoint","startingPoint","results","find","p1Matched","furthestLineIndexMaintainingDirection","originalDirection","fromLineIndex","lineIndex","nextLine","createSvgElement","elementName","additionalAttributes","element","document","createElementNS","setAttribute","drawRoomBoundary","gridElement","points","squareSize","p0","ROOM_BORDER_WIDTH","toSvgPoints","polylineElement","stroke-width","class","appendChild","drawValue","textElement","dominant-baseline","text-anchor","data-coords","data-is-initial-value","textNode","createTextNode","drawInitialGrid","getElementById","getBoundingClientRect","style","gridLine","x1","y1","x2","y2","drawHorizontalGridLines","drawVerticalGridLines","drawRoomBoundaries","drawInitialValues","drawSolution","querySelectorAll","calculatedValue","removeChild","clearCalculatedValues","drawCalculatedValues","selectPuzzleElement","solveButtonElement","cancelButtonElement","stepsContainerElement","stepCountElement","web_puzzle","solving","queue","intervalId","showStepCount","stepCount","onInterval","innerText","stopSolving","startSolving","setInterval","updateUiState","clearInterval","selectPuzzle","selectedPuzzle","children","child","clearGrid","disabled","display","addEventListener","samplePuzzles"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","import _curry1 from './_curry1.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _isArray from './_isArray.js';\nimport _isTransformer from './_isTransformer.js';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _map from './internal/_map.js';\nimport _reduce from './internal/_reduce.js';\nimport _xmap from './internal/_xmap.js';\nimport curryN from './curryN.js';\nimport keys from './keys.js';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport _isArguments from './internal/_isArguments.js';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nexport default keys;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry2 from './internal/_curry2.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import _isArray from './_isArray.js';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _forceReduced from './_forceReduced.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './_curry2.js';\nimport _flatCat from './_flatCat.js';\nimport map from '../map.js';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _makeFlat from './internal/_makeFlat.js';\nimport _xchain from './internal/_xchain.js';\nimport map from './map.js';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _filter from './internal/_filter.js';\nimport _isObject from './internal/_isObject.js';\nimport _reduce from './internal/_reduce.js';\nimport _xfilter from './internal/_xfilter.js';\nimport keys from './keys.js';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\nexport default F;","\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry2 from './internal/_curry2.js';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","import _concat from './internal/_concat.js';\nimport _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xall from './internal/_xall.js';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\nimport prop from './prop.js';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xany from './internal/_xany.js';\n\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport map from './map.js';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat.js';\nimport _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture.js';\nimport _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xaperture from './internal/_xaperture.js';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1.js';\nimport apply from './apply.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\nimport keys from './keys.js';\nimport values from './values.js';\n\n// Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1.js';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\nimport _isArray from './internal/_isArray.js';\nimport _isInteger from './internal/_isInteger.js';\nimport assoc from './assoc.js';\nimport isNil from './isNil.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport ap from './ap.js';\nimport curryN from './curryN.js';\nimport map from './map.js';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1.js';\nimport liftN from './liftN.js';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport and from './and.js';\nimport lift from './lift.js';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry.js';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1.js';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp.js';\nimport type from '../type.js';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1.js';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift.js';\nimport not from './not.js';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","import _curry1 from './internal/_curry1.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain.js';\nimport compose from './compose.js';\nimport map from './map.js';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @deprecated since v0.26.0\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       const get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       const getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity.js';\nimport _pipeP from './internal/_pipeP.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @deprecated since v0.26.0\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @deprecated since v0.26.0\n * @example\n *\n *      const db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      const lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      const lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      const followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1.js';\nimport _identity from './internal/_identity.js';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport head from './head.js';\nimport _reduce from './internal/_reduce.js';\nimport tail from './tail.js';\nimport identity from './identity.js';\n\n/**\n * Performs left-to-right function composition using transforming function. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, f(g, ...args)))\n */\nvar pipeWith = /*#__PURE__*/_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\nexport default pipeWith;","import _curry2 from './internal/_curry2.js';\nimport pipeWith from './pipeWith.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition using transforming function. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, f(i, ...args)))\n */\nvar composeWith = /*#__PURE__*/_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\nexport default composeWith;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _arrayFromIterator from './_arrayFromIterator.js';\nimport _includesWith from './_includesWith.js';\nimport _functionName from './_functionName.js';\nimport _has from './_has.js';\nimport _objectIs from './_objectIs.js';\nimport keys from '../keys.js';\nimport type from '../type.js';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2.js';\nimport _equals from './internal/_equals.js';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals.js';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf.js';\n\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport filter from './filter.js';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _includes from './_includes.js';\nimport _map from './_map.js';\nimport _quote from './_quote.js';\nimport _toISOString from './_toISOString.js';\nimport keys from '../keys.js';\nimport reject from '../reject.js';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1.js';\nimport _toString from './internal/_toString.js';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport _isFunction from './internal/_isFunction.js';\nimport _isString from './internal/_isString.js';\nimport toString from './toString.js';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport map from './map.js';\nimport max from './max.js';\nimport reduce from './reduce.js';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2.js';\nimport curry from './curry.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1.js';\nimport constructN from './constructN.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\nvar contains = /*#__PURE__*/_curry2(_includes);\nexport default contains;","import _curry2 from './internal/_curry2.js';\nimport _map from './internal/_map.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN.js';\nimport _has from './_has.js';\nimport _xfBase from './_xfBase.js';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _has from './internal/_has.js';\nimport _reduce from './internal/_reduce.js';\nimport _xreduceBy from './internal/_xreduceBy.js';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy.js';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add.js';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _includes from './_includes.js';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _curry2 from './internal/_curry2.js';\nimport _Set from './internal/_Set.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3.js';\nimport adjust from './adjust.js';\nimport always from './always.js';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\nexport default update;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\nimport _isArray from './internal/_isArray.js';\nimport assoc from './assoc.js';\nimport dissoc from './dissoc.js';\nimport remove from './remove.js';\nimport update from './update.js';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdrop from './internal/_xdrop.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtake from './internal/_xtake.js';\nimport slice from './slice.js';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take.js';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLast from './internal/_dropLast.js';\nimport _xdropLast from './internal/_xdropLast.js';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice.js';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLastWhile from './internal/_dropLastWhile.js';\nimport _xdropLastWhile from './internal/_xdropLastWhile.js';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import nth from './nth.js';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport last from './last.js';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport dropRepeatsWith from './dropRepeatsWith.js';\nimport equals from './equals.js';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropWhile from './internal/_xdropWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport lift from './lift.js';\nimport or from './or.js';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1.js';\nimport _isArguments from './internal/_isArguments.js';\nimport _isArray from './internal/_isArray.js';\nimport _isObject from './internal/_isObject.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\nexport default empty;","import _curry2 from './internal/_curry2.js';\nimport drop from './drop.js';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport takeLast from './takeLast.js';\n\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfind from './internal/_xfind.js';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindIndex from './internal/_xfindIndex.js';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLast from './internal/_xfindLast.js';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLastIndex from './internal/_xfindLastIndex.js';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1.js';\nimport _makeFlat from './internal/_makeFlat.js';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2.js';\nimport keys from './keys.js';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\nimport reduceBy from './reduceBy.js';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nexport default hasPath;","import _curry2 from './internal/_curry2.js';\nimport hasPath from './hasPath.js';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nexport default has;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import _objectIs from './internal/_objectIs.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nexport default identical;","import _curry3 from './internal/_curry3.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add.js';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\nvar includes = /*#__PURE__*/_curry2(_includes);\nexport default includes;","import reduceBy from './reduceBy.js';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2.js';\nimport _indexOf from './internal/_indexOf.js';\nimport _isArray from './internal/_isArray.js';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice.js';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\nimport _filter from './internal/_filter.js';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _Set from './internal/_Set.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity.js';\nimport uniqBy from './uniqBy.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport _filter from './internal/_filter.js';\nimport flip from './flip.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has.js';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _objectAssign from './_objectAssign.js';\nimport _identity from './_identity.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _isTransformer from './_isTransformer.js';\nimport objOf from '../objOf.js';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone.js';\nimport _curry3 from './internal/_curry3.js';\nimport _isTransformer from './internal/_isTransformer.js';\nimport _reduce from './internal/_reduce.js';\nimport _stepCat from './internal/_stepCat.js';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport keys from './keys.js';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport curryN from './curryN.js';\nimport toString from './toString.js';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2.js';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1.js';\nimport empty from './empty.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker.js';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1.js';\nimport converge from './converge.js';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport equals from './equals.js';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","import _curry1 from './internal/_curry1.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1.js';\nimport lens from './lens.js';\nimport nth from './nth.js';\nimport update from './update.js';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1.js';\nimport assocPath from './assocPath.js';\nimport lens from './lens.js';\nimport path from './path.js';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1.js';\nimport assoc from './assoc.js';\nimport lens from './lens.js';\nimport prop from './prop.js';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport keys from './keys.js';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add.js';\nimport reduce from './reduce.js';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1.js';\nimport sum from './sum.js';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1.js';\nimport mean from './mean.js';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default merge;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3.js';\nimport _isObject from './internal/_isObject.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\nvar mergeLeft = /*#__PURE__*/_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\nexport default mergeLeft;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\nvar mergeRight = /*#__PURE__*/_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default mergeRight;","import _curry3 from './internal/_curry3.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\nvar move = /*#__PURE__*/_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport all from './all.js';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\nexport default none;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport nth from './nth.js';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3.js';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1.js';\nimport _of from './internal/_of.js';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _isFunction from './_isFunction.js';\nimport _toString from './_toString.js';\n\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.then\n * @example\n *\n *      var failedFetch = (id) => Promise.reject('bad ID');\n *      var useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' })\n *\n *      //recoverFromFailure :: String -> Promise ({firstName, lastName})\n *      var recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.then(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log)\n */\nvar otherwise = /*#__PURE__*/_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\nexport default otherwise;","import _curry3 from './internal/_curry3.js';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity.js';\nimport _curry2 from './_curry2.js';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\nimport flip from './flip.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter.js';\nimport juxt from './juxt.js';\nimport reject from './reject.js';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\nimport path from './path.js';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3.js';\nimport defaultTo from './defaultTo.js';\nimport path from './path.js';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3.js';\nimport path from './path.js';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK.js';\nimport reverse from './reverse.js';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply.js';\nimport reduce from './reduce.js';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map.js';\nimport identity from './identity.js';\nimport pickAll from './pickAll.js';\nimport useWith from './useWith.js';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3.js';\nimport is from './is.js';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3.js';\nimport pathOr from './pathOr.js';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return pathOr(val, [p], obj);\n});\nexport default propOr;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN.js';\nimport _reduce from './internal/_reduce.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 === 1;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is only available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2.js';\nimport always from './always.js';\nimport times from './times.js';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2.js';\nimport ap from './ap.js';\nimport map from './map.js';\nimport prepend from './prepend.js';\nimport reduceRight from './reduceRight.js';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3.js';\nimport always from './always.js';\nimport over from './over.js';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker.js';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2.js';\nimport length from './length.js';\nimport slice from './slice.js';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport take from './take.js';\n\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2.js';\nimport concat from './concat.js';\nimport difference from './difference.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3.js';\nimport concat from './concat.js';\nimport differenceWith from './differenceWith.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtakeWhile from './internal/_xtakeWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtap from './internal/_xtap.js';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","import _cloneRegExp from './internal/_cloneRegExp.js';\nimport _curry2 from './internal/_curry2.js';\nimport _isRegExp from './internal/_isRegExp.js';\nimport toString from './toString.js';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.then(R.pick(['firstName', 'lastName']))\n *      );\n */\nvar then = /*#__PURE__*/_curry2(function then(f, p) {\n  _assertPromise('then', p);\n\n  return p.then(f);\n});\nexport default then;","import invoker from './invoker.js';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker.js';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce.js';\nimport _xwrap from './internal/_xwrap.js';\nimport curryN from './curryN.js';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 === 1;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3.js';\nimport map from './map.js';\nimport sequence from './sequence.js';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1.js';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? /*#__PURE__*/_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) : /*#__PURE__*/_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from './internal/_arity.js';\nimport _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n `` */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport compose from './compose.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _includesWith from './internal/_includesWith.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\nimport uniqWith from './uniqWith.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity.js';\nimport chain from './chain.js';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2.js';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport map from './map.js';\nimport where from './where.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport flip from './flip.js';\nimport reject from './reject.js';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","import curryN from './curryN.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\nvar thunkify = /*#__PURE__*/_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;","export { default as F } from './F.js';\nexport { default as T } from './T.js';\nexport { default as __ } from './__.js';\nexport { default as add } from './add.js';\nexport { default as addIndex } from './addIndex.js';\nexport { default as adjust } from './adjust.js';\nexport { default as all } from './all.js';\nexport { default as allPass } from './allPass.js';\nexport { default as always } from './always.js';\nexport { default as and } from './and.js';\nexport { default as any } from './any.js';\nexport { default as anyPass } from './anyPass.js';\nexport { default as ap } from './ap.js';\nexport { default as aperture } from './aperture.js';\nexport { default as append } from './append.js';\nexport { default as apply } from './apply.js';\nexport { default as applySpec } from './applySpec.js';\nexport { default as applyTo } from './applyTo.js';\nexport { default as ascend } from './ascend.js';\nexport { default as assoc } from './assoc.js';\nexport { default as assocPath } from './assocPath.js';\nexport { default as binary } from './binary.js';\nexport { default as bind } from './bind.js';\nexport { default as both } from './both.js';\nexport { default as call } from './call.js';\nexport { default as chain } from './chain.js';\nexport { default as clamp } from './clamp.js';\nexport { default as clone } from './clone.js';\nexport { default as comparator } from './comparator.js';\nexport { default as complement } from './complement.js';\nexport { default as compose } from './compose.js';\nexport { default as composeK } from './composeK.js';\nexport { default as composeP } from './composeP.js';\nexport { default as composeWith } from './composeWith.js';\nexport { default as concat } from './concat.js';\nexport { default as cond } from './cond.js';\nexport { default as construct } from './construct.js';\nexport { default as constructN } from './constructN.js';\nexport { default as contains } from './contains.js';\nexport { default as converge } from './converge.js';\nexport { default as countBy } from './countBy.js';\nexport { default as curry } from './curry.js';\nexport { default as curryN } from './curryN.js';\nexport { default as dec } from './dec.js';\nexport { default as defaultTo } from './defaultTo.js';\nexport { default as descend } from './descend.js';\nexport { default as difference } from './difference.js';\nexport { default as differenceWith } from './differenceWith.js';\nexport { default as dissoc } from './dissoc.js';\nexport { default as dissocPath } from './dissocPath.js';\nexport { default as divide } from './divide.js';\nexport { default as drop } from './drop.js';\nexport { default as dropLast } from './dropLast.js';\nexport { default as dropLastWhile } from './dropLastWhile.js';\nexport { default as dropRepeats } from './dropRepeats.js';\nexport { default as dropRepeatsWith } from './dropRepeatsWith.js';\nexport { default as dropWhile } from './dropWhile.js';\nexport { default as either } from './either.js';\nexport { default as empty } from './empty.js';\nexport { default as endsWith } from './endsWith.js';\nexport { default as eqBy } from './eqBy.js';\nexport { default as eqProps } from './eqProps.js';\nexport { default as equals } from './equals.js';\nexport { default as evolve } from './evolve.js';\nexport { default as filter } from './filter.js';\nexport { default as find } from './find.js';\nexport { default as findIndex } from './findIndex.js';\nexport { default as findLast } from './findLast.js';\nexport { default as findLastIndex } from './findLastIndex.js';\nexport { default as flatten } from './flatten.js';\nexport { default as flip } from './flip.js';\nexport { default as forEach } from './forEach.js';\nexport { default as forEachObjIndexed } from './forEachObjIndexed.js';\nexport { default as fromPairs } from './fromPairs.js';\nexport { default as groupBy } from './groupBy.js';\nexport { default as groupWith } from './groupWith.js';\nexport { default as gt } from './gt.js';\nexport { default as gte } from './gte.js';\nexport { default as has } from './has.js';\nexport { default as hasIn } from './hasIn.js';\nexport { default as hasPath } from './hasPath.js';\nexport { default as head } from './head.js';\nexport { default as identical } from './identical.js';\nexport { default as identity } from './identity.js';\nexport { default as ifElse } from './ifElse.js';\nexport { default as inc } from './inc.js';\nexport { default as includes } from './includes.js';\nexport { default as indexBy } from './indexBy.js';\nexport { default as indexOf } from './indexOf.js';\nexport { default as init } from './init.js';\nexport { default as innerJoin } from './innerJoin.js';\nexport { default as insert } from './insert.js';\nexport { default as insertAll } from './insertAll.js';\nexport { default as intersection } from './intersection.js';\nexport { default as intersperse } from './intersperse.js';\nexport { default as into } from './into.js';\nexport { default as invert } from './invert.js';\nexport { default as invertObj } from './invertObj.js';\nexport { default as invoker } from './invoker.js';\nexport { default as is } from './is.js';\nexport { default as isEmpty } from './isEmpty.js';\nexport { default as isNil } from './isNil.js';\nexport { default as join } from './join.js';\nexport { default as juxt } from './juxt.js';\nexport { default as keys } from './keys.js';\nexport { default as keysIn } from './keysIn.js';\nexport { default as last } from './last.js';\nexport { default as lastIndexOf } from './lastIndexOf.js';\nexport { default as length } from './length.js';\nexport { default as lens } from './lens.js';\nexport { default as lensIndex } from './lensIndex.js';\nexport { default as lensPath } from './lensPath.js';\nexport { default as lensProp } from './lensProp.js';\nexport { default as lift } from './lift.js';\nexport { default as liftN } from './liftN.js';\nexport { default as lt } from './lt.js';\nexport { default as lte } from './lte.js';\nexport { default as map } from './map.js';\nexport { default as mapAccum } from './mapAccum.js';\nexport { default as mapAccumRight } from './mapAccumRight.js';\nexport { default as mapObjIndexed } from './mapObjIndexed.js';\nexport { default as match } from './match.js';\nexport { default as mathMod } from './mathMod.js';\nexport { default as max } from './max.js';\nexport { default as maxBy } from './maxBy.js';\nexport { default as mean } from './mean.js';\nexport { default as median } from './median.js';\nexport { default as memoizeWith } from './memoizeWith.js';\nexport { default as merge } from './merge.js';\nexport { default as mergeAll } from './mergeAll.js';\nexport { default as mergeDeepLeft } from './mergeDeepLeft.js';\nexport { default as mergeDeepRight } from './mergeDeepRight.js';\nexport { default as mergeDeepWith } from './mergeDeepWith.js';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey.js';\nexport { default as mergeLeft } from './mergeLeft.js';\nexport { default as mergeRight } from './mergeRight.js';\nexport { default as mergeWith } from './mergeWith.js';\nexport { default as mergeWithKey } from './mergeWithKey.js';\nexport { default as min } from './min.js';\nexport { default as minBy } from './minBy.js';\nexport { default as modulo } from './modulo.js';\nexport { default as move } from './move.js';\nexport { default as multiply } from './multiply.js';\nexport { default as nAry } from './nAry.js';\nexport { default as negate } from './negate.js';\nexport { default as none } from './none.js';\nexport { default as not } from './not.js';\nexport { default as nth } from './nth.js';\nexport { default as nthArg } from './nthArg.js';\nexport { default as o } from './o.js';\nexport { default as objOf } from './objOf.js';\nexport { default as of } from './of.js';\nexport { default as omit } from './omit.js';\nexport { default as once } from './once.js';\nexport { default as or } from './or.js';\nexport { default as otherwise } from './otherwise.js';\nexport { default as over } from './over.js';\nexport { default as pair } from './pair.js';\nexport { default as partial } from './partial.js';\nexport { default as partialRight } from './partialRight.js';\nexport { default as partition } from './partition.js';\nexport { default as path } from './path.js';\nexport { default as pathEq } from './pathEq.js';\nexport { default as pathOr } from './pathOr.js';\nexport { default as pathSatisfies } from './pathSatisfies.js';\nexport { default as pick } from './pick.js';\nexport { default as pickAll } from './pickAll.js';\nexport { default as pickBy } from './pickBy.js';\nexport { default as pipe } from './pipe.js';\nexport { default as pipeK } from './pipeK.js';\nexport { default as pipeP } from './pipeP.js';\nexport { default as pipeWith } from './pipeWith.js';\nexport { default as pluck } from './pluck.js';\nexport { default as prepend } from './prepend.js';\nexport { default as product } from './product.js';\nexport { default as project } from './project.js';\nexport { default as prop } from './prop.js';\nexport { default as propEq } from './propEq.js';\nexport { default as propIs } from './propIs.js';\nexport { default as propOr } from './propOr.js';\nexport { default as propSatisfies } from './propSatisfies.js';\nexport { default as props } from './props.js';\nexport { default as range } from './range.js';\nexport { default as reduce } from './reduce.js';\nexport { default as reduceBy } from './reduceBy.js';\nexport { default as reduceRight } from './reduceRight.js';\nexport { default as reduceWhile } from './reduceWhile.js';\nexport { default as reduced } from './reduced.js';\nexport { default as reject } from './reject.js';\nexport { default as remove } from './remove.js';\nexport { default as repeat } from './repeat.js';\nexport { default as replace } from './replace.js';\nexport { default as reverse } from './reverse.js';\nexport { default as scan } from './scan.js';\nexport { default as sequence } from './sequence.js';\nexport { default as set } from './set.js';\nexport { default as slice } from './slice.js';\nexport { default as sort } from './sort.js';\nexport { default as sortBy } from './sortBy.js';\nexport { default as sortWith } from './sortWith.js';\nexport { default as split } from './split.js';\nexport { default as splitAt } from './splitAt.js';\nexport { default as splitEvery } from './splitEvery.js';\nexport { default as splitWhen } from './splitWhen.js';\nexport { default as startsWith } from './startsWith.js';\nexport { default as subtract } from './subtract.js';\nexport { default as sum } from './sum.js';\nexport { default as symmetricDifference } from './symmetricDifference.js';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith.js';\nexport { default as tail } from './tail.js';\nexport { default as take } from './take.js';\nexport { default as takeLast } from './takeLast.js';\nexport { default as takeLastWhile } from './takeLastWhile.js';\nexport { default as takeWhile } from './takeWhile.js';\nexport { default as tap } from './tap.js';\nexport { default as test } from './test.js';\nexport { default as then } from './then.js';\nexport { default as times } from './times.js';\nexport { default as toLower } from './toLower.js';\nexport { default as toPairs } from './toPairs.js';\nexport { default as toPairsIn } from './toPairsIn.js';\nexport { default as toString } from './toString.js';\nexport { default as toUpper } from './toUpper.js';\nexport { default as transduce } from './transduce.js';\nexport { default as transpose } from './transpose.js';\nexport { default as traverse } from './traverse.js';\nexport { default as trim } from './trim.js';\nexport { default as tryCatch } from './tryCatch.js';\nexport { default as type } from './type.js';\nexport { default as unapply } from './unapply.js';\nexport { default as unary } from './unary.js';\nexport { default as uncurryN } from './uncurryN.js';\nexport { default as unfold } from './unfold.js';\nexport { default as union } from './union.js';\nexport { default as unionWith } from './unionWith.js';\nexport { default as uniq } from './uniq.js';\nexport { default as uniqBy } from './uniqBy.js';\nexport { default as uniqWith } from './uniqWith.js';\nexport { default as unless } from './unless.js';\nexport { default as unnest } from './unnest.js';\nexport { default as until } from './until.js';\nexport { default as update } from './update.js';\nexport { default as useWith } from './useWith.js';\nexport { default as values } from './values.js';\nexport { default as valuesIn } from './valuesIn.js';\nexport { default as view } from './view.js';\nexport { default as when } from './when.js';\nexport { default as where } from './where.js';\nexport { default as whereEq } from './whereEq.js';\nexport { default as without } from './without.js';\nexport { default as xprod } from './xprod.js';\nexport { default as zip } from './zip.js';\nexport { default as zipObj } from './zipObj.js';\nexport { default as zipWith } from './zipWith.js';\nexport { default as thunkify } from './thunkify.js';","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import nth from './nth.js';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _has from './_has.js';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _isArrayLike from './_isArrayLike.js';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","const SAMPLE_PUZZLE_8x8 = [\n  'A:- B:- C:- C:3 C:- D:- D:- D:-',\n  'E:- B:- F:- G:- H:- H:- D:- I:-',\n  'E:- E:- F:- G:- G:- J:- J:2 K:-',\n  'E:- L:- L:- G:1 M:- M:3 K:- K:-',\n  'L:- L:- N:1 O:- O:5 M:- M:- K:-',\n  'P:- L:3 N:- Q:- O:- M:- R:- R:-',\n  'P:- S:- T:- O:- O:- R:- R:- U:-',\n  'V:- V:- T:- T:- T:2 U:- U:- U:-'\n]\n\nconst SAMPLE_PUZZLE_10x10 = [\n  'AA:- AB:- AC:- AC:- AD:5 AD:4 AD:- AD:- AE:1 AE:-',\n  'AA:- AF:- AF:- AG:- AG:- AG:- AH:- AD:- AE:- AE:3',\n  'AA:- AI:- AF:- AF:1 AF:3 AJ:- AJ:- AD:- AK:- AE:-',\n  'AA:- AL:- AF:- AM:- AM:- AM:- AN:- AD:- AO:- AO:-',\n  'AP:- AL:3 AL:- AQ:- AR:- AS:- AN:4 AN:- AN:- AN:-',\n  'AT:- AL:- AL:- AR:- AR:- AR:- AU:- AU:- AU:- AV:-',\n  'AT:- AW:- AL:- AX:- AY:- AY:- AY:6 AY:- AU:- AV:4',\n  'AT:- AZ:- AZ:- BA:- BA:- BA:- BB:- AY:- AU:- AV:-',\n  'AT:- BC:- AZ:- AZ:2 AZ:- BD:- BB:- AY:- BE:- AV:3',\n  'BF:- BC:- AZ:- BG:- BG:- BG:4 BG:- AY:- BE:- BH:-'\n]\n\nmodule.exports = {\n  SAMPLE_PUZZLE_8x8,\n  SAMPLE_PUZZLE_10x10\n}\n","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","const R = require('ramda')\n\nconst parsePuzzle = lines => {\n  const splitLines = lines.map(line => line.split(/\\s/).map(s => s.trim()))\n  const width = splitLines[0].length\n  const height = splitLines.length\n  const xs = R.range(0, width)\n  const ys = R.range(0, height)\n  const cells = R.chain(y => R.map(x => {\n    const cellString = splitLines[y][x]\n    const [id, initialValueString] = cellString.split(':').map(s => s.trim())\n    const initialValue = Number(initialValueString)\n    return {\n      id,\n      coords: { x, y },\n      initialValue: Number.isInteger(initialValue) ? initialValue : undefined\n    }\n  }, xs), ys)\n  const groupedCells = R.groupBy(cell => cell.id, cells)\n  const rooms = R.values(groupedCells).map(cells => ({\n    id: cells[0].id,\n    cells: cells.map(cell => ({\n      coords: cell.coords,\n      initialValue: cell.initialValue\n    }))\n  }))\n  return {\n    width,\n    height,\n    rooms\n  }\n}\n\nmodule.exports = {\n  parsePuzzle\n}\n","const R = require('ramda')\nconst { Dlx } = require('dlxlib')\n\nconst solve = (puzzle, onSearchStep, onSolutionFound) => {\n  const rows = buildRows(puzzle.rooms)\n  const matrix = buildMatrix(puzzle, rows)\n  const dlx = new Dlx()\n  if (onSearchStep) {\n    dlx.on('step', e =>\n      onSearchStep(resolveRowIndices(rows)(e.partialSolution), e.stepIndex))\n  }\n  if (onSolutionFound) {\n    dlx.on('solution', e =>\n      onSolutionFound(resolveRowIndices(rows)(e.solution), e.solutionIndex))\n  }\n  const numPrimaryColumns = 2 * puzzle.width * puzzle.height\n  const options = { numPrimaryColumns }\n  const solutions = dlx.solve(matrix, options)\n  return solutions.map(resolveRowIndices(rows))\n}\n\nconst buildRows = rooms => R.chain(buildRowsForRoom, rooms)\n\nconst buildRowsForRoom = room => {\n  const [emptyCells, occupiedCells] =\n    R.partition(cell => R.isNil(cell.initialValue), room.cells)\n  const rowsForOccupiedCells = occupiedCells.map(cell => ({\n    room,\n    coords: cell.coords,\n    value: cell.initialValue,\n    isInitialValue: true\n  }))\n  const initialValues = occupiedCells.map(cell => cell.initialValue)\n  const allValues = R.range(0, room.cells.length).map(R.inc)\n  const remainingValues = R.difference(allValues, initialValues)\n  const rowsForEmptyCells = R.chain(\n    cell =>\n      R.map(\n        value => ({\n          room,\n          coords: cell.coords,\n          value,\n          isInitialValue: false\n        }),\n        remainingValues),\n    emptyCells)\n  return R.concat(rowsForOccupiedCells, rowsForEmptyCells)\n}\n\nconst buildMatrix = (puzzle, rows) => rows.map(row => buildMatrixRow(puzzle, row))\n\nconst buildMatrixRow = (puzzle, row) => [\n  ...makeLocationColumns(puzzle, row),\n  ...makeRoomColumns(puzzle, row),\n  ...makeRippleColumns(puzzle, row)\n]\n\nconst makeLocationColumns = (puzzle, row) => {\n  const locationIndex = row.coords.y * puzzle.width + row.coords.x\n  return R.range(0, puzzle.width * puzzle.height).map(index =>\n    index === locationIndex ? 1 : 0)\n}\n\nconst makeRoomColumns = (puzzle, row) => {\n  const roomIndex = puzzle.rooms.findIndex(room => room.id === row.room.id)\n  const previousRooms = R.take(roomIndex, puzzle.rooms)\n  const previousRoomSizes = previousRooms.map(room => room.cells.length)\n  const roomValueIndex = R.sum(previousRoomSizes) + row.value - 1\n  return R.range(0, puzzle.width * puzzle.height).map(index =>\n    index === roomValueIndex ? 1 : 0)\n}\n\nconst makeRippleColumns = (puzzle, row) => {\n  const roomSizes = puzzle.rooms.map(room => room.cells.length)\n  const maxRoomSize = Math.max(...roomSizes)\n  const values = R.range(0, maxRoomSize).map(R.inc)\n  return R.chain(\n    makeRippleColumnsForValue(puzzle, row),\n    values)\n}\n\nconst makeRippleColumnsForValue = (puzzle, row) => value =>\n  R.chain(\n    makeRippleColumnsForValueAndDirection(puzzle, row, value),\n    [UP, DOWN, LEFT, RIGHT])\n\nconst UP = Symbol('UP')\nconst DOWN = Symbol('DOWN')\nconst LEFT = Symbol('LEFT')\nconst RIGHT = Symbol('RIGHT')\n\nconst makeRippleColumnsForValueAndDirection = (puzzle, row, value) => direction => {\n  const rippleIndices = row.value === value\n    ? calculateRippleIndices(puzzle, row, direction)\n    : []\n  return R.range(0, puzzle.width * puzzle.height)\n    .map(index => rippleIndices.includes(index) ? 1 : 0)\n}\n\nconst isCellInGrid = puzzle => cell =>\n  cell.x >= 0 &&\n  cell.y >= 0 &&\n  cell.x < puzzle.width &&\n  cell.y < puzzle.height\n\nconst calculateRippleIndices = (puzzle, row, direction) => {\n  const x = row.coords.x\n  const y = row.coords.y\n  const offsets = R.range(0, row.value + 1)\n  const rippleCells = offsets.map(offset => {\n    switch (direction) {\n      case UP: return { x, y: y - offset }\n      case DOWN: return { x, y: y + offset }\n      case LEFT: return { x: x - offset, y }\n      case RIGHT: return { x: x + offset, y }\n    }\n  })\n  return rippleCells\n    .filter(isCellInGrid(puzzle))\n    .map(cell => cell.y * puzzle.width + cell.x)\n}\n\nconst resolveRowIndices = rows => rowIndices =>\n  rowIndices.map(rowIndex => rows[rowIndex])\n\nmodule.exports = {\n  solve\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.dlxlib = {}));\n}(this, function (exports) { 'use strict';\n\n  class DataObject {\n\n    constructor(listHeader, rowIndex) {\n      this.listHeader = listHeader;\n      this.rowIndex = rowIndex;\n      this.up = this;\n      this.down = this;\n      this.left = this;\n      this.right = this;\n      if (listHeader) {\n        listHeader.addDataObject(this);\n      }\n    }\n\n    appendToRow(dataObject) {\n      this.left.right = dataObject;\n      dataObject.right = this;\n      dataObject.left = this.left;\n      this.left = dataObject;\n    }\n\n    appendToColumn(dataObject) {\n      this.up.down = dataObject;\n      dataObject.down = this;\n      dataObject.up = this.up;\n      this.up = dataObject;\n    }\n\n    unlinkFromColumn() {\n      this.down.up = this.up;\n      this.up.down = this.down;\n    }\n\n    relinkIntoColumn() {\n      this.down.up = this;\n      this.up.down = this;\n    }\n\n    loopUp(fn) { this.loop(fn, 'up'); }\n    loopDown(fn) { this.loop(fn, 'down'); }\n    loopLeft(fn) { this.loop(fn, 'left'); }\n    loopRight(fn) { this.loop(fn, 'right'); }\n\n    loop(fn, propName) {\n      for (let next = this[propName]; next !== this; next = next[propName]) {\n        fn(next);\n      }\n    }\n  }\n\n  class ColumnObject extends DataObject {\n\n    constructor() {\n      super(null, -1);\n      this.previousColumnObject = this;\n      this.nextColumnObject = this;\n      this.numberOfRows = 0;\n    }\n\n    appendColumnHeader(columnObject) {\n      this.previousColumnObject.nextColumnObject = columnObject;\n      columnObject.nextColumnObject = this;\n      columnObject.previousColumnObject = this.previousColumnObject;\n      this.previousColumnObject = columnObject;\n    }\n\n    unlinkColumnHeader() {\n      this.nextColumnObject.previousColumnObject = this.previousColumnObject;\n      this.previousColumnObject.nextColumnObject = this.nextColumnObject;\n    }\n\n    relinkColumnHeader() {\n      this.nextColumnObject.previousColumnObject = this;\n      this.previousColumnObject.nextColumnObject = this;\n    }\n\n    addDataObject(dataObject) {\n      this.appendToColumn(dataObject);\n      this.numberOfRows++;\n    }\n\n    unlinkDataObject(dataObject) {\n      dataObject.unlinkFromColumn();\n      this.numberOfRows--;\n    }\n\n    relinkDataObject(dataObject) {\n      dataObject.relinkIntoColumn();\n      this.numberOfRows++;\n    }\n\n    loopNext(fn) {\n      for (let next = this.nextColumnObject; next !== this; next = next.nextColumnObject) {\n        fn(next);\n      }\n    }\n  }\n\n  const EventEmitter = require('events');\n\n  /**\n   * @typedef {number[]} PartialSolution The indices of the matrix rows that comprise a partial solution.\n   */\n\n  /**\n   * @typedef {number[]} Solution The indices of the matrix rows that comprise a complete solution.\n   */\n\n  /**\n   * @typedef {*} MatrixValue Matrix values can be of any type. Anything truthy is treated as a 1. Anything falsy is treated as a 0.\n   */\n\n  /**\n   * @typedef {MatrixValue[]} MatrixRow A matrix row is an array of {@link MatrixValue}.\n   */\n\n  /**\n   * @typedef {MatrixRow[]} Matrix A matrix is an array of {@link MatrixRow}.\n   */\n\n  /**\n   * Solves the matrix and returns an array of solutions.\n   * This is a convenience function which avoids having to create an instance of the {@link Dlx} class.\n   * It is useful if you are not interested in handling any events.\n   * @param {Matrix} matrix The matrix to be solved.\n   * @param {object} [options] Optional options object.\n   * @param {number} options.numSolutions The number of solutions to be returned. By default, all solutions are returned.\n   * @param {number} options.numPrimaryColumns The number of primary columns. By default, all columns are primary.\n   *     Any remaining columns are considered to be secondary columns.\n   * @returns {Solution[]} The solutions that were found.\n   */\n  function solve(matrix, options) {\n    return new Dlx().solve(matrix, options)\n  }\n\n  /**\n   * Creates an ES2015 Generator object that can be used to iterate over the solutions to the matrix.\n   * This is a convenience function which avoids having to create an instance of the {@link Dlx} class.\n   * It is useful if you are not interested in handling any events.\n   * @param {Matrix} matrix The matrix to be solved.\n   * @param {object} [options] Optional options object.\n   * @param {number} options.numPrimaryColumns The number of primary columns. By default, all columns are primary.\n   *     Any remaining columns are considered to be secondary columns.\n   * @returns {IterableIterator.<number>} An ES2015 Generator object that can be used to iterate over the solutions.\n   */\n  function* solutionGenerator(matrix, options) {\n    yield* new Dlx().solutionGenerator(matrix, options);\n  }\n\n  const defaultOptions = {\n    numSolutions: Number.MAX_SAFE_INTEGER,\n    numPrimaryColumns: Number.MAX_SAFE_INTEGER\n  };\n\n  /**\n   * \n   */\n  class Dlx extends EventEmitter {\n\n    /**\n     * Solves the matrix and returns an array of solutions.\n     * @param {Matrix} matrix The matrix to be solved.\n     * @param {object} [options] Additional options object.\n     * @param {number} [options.numSolutions] The number of solutions to be returned. By default, all solutions are returned.\n     * @param {number} [options.numPrimaryColumns] The number of primary columns. By default, all columns are primary.\n     *     Any remaining columns are considered to be secondary columns.\n     * @returns {Solution[]} The solutions that were found.\n     * @fires Dlx#step\n     * @fires Dlx#solution\n     */\n    solve(matrix, options) {\n      const actualOptions = Object.assign({}, defaultOptions, options);\n      if (!Number.isInteger(actualOptions.numSolutions)) {\n        throw new Error('options.numSolutions must be an integer')\n      }\n      if (actualOptions.numSolutions < 0) {\n        throw new Error(`options.numSolutions can't be negative - don't be silly`)\n      }\n      const generator = this.solutionGenerator(matrix, actualOptions);\n      const numSolutions = actualOptions.numSolutions;\n      const solutions = [];\n      for (let index = 0; index < numSolutions; index++) {\n        const iteratorResult = generator.next();\n        if (iteratorResult.done) break\n        solutions.push(iteratorResult.value);\n      }\n      return solutions\n    }\n\n    /**\n     * Creates an ES2015 Generator object that can be used to iterate over the solutions to the matrix.\n     * @param {Matrix} matrix The matrix to be solved.\n     * @param {object} [options] Additional options object.\n     * @param {number} [options.numPrimaryColumns] The number of primary columns. By default, all columns are primary.\n     *     Any remaining columns are considered to be secondary columns.\n     * @returns {IterableIterator.<Solution>} An ES2015 Generator object that can be used to iterate over the solutions.\n     * @fires Dlx#step\n     * @fires Dlx#solution\n     */\n    * solutionGenerator(matrix, options) {\n      const actualOptions = Object.assign({}, defaultOptions, options);\n      if (!Number.isInteger(actualOptions.numPrimaryColumns)) {\n        throw new Error('options.numPrimaryColumns must be an integer')\n      }\n      if (actualOptions.numPrimaryColumns < 0) {\n        throw new Error(`options.numPrimaryColumns can't be negative - don't be silly`)\n      }\n      const root = buildInternalStructure(matrix, actualOptions.numPrimaryColumns);\n      const searchState = new SearchState(this, root);\n      yield* search(searchState);\n    }\n  }\n\n  /**\n   * Step event - fired for each step of the algorithm.\n   * @event Dlx#step\n   * @type object\n   * @property {PartialSolution} partialSolution The current partial solution at this step of the algorithm.\n   * @property {number} stepIndex The index of this step of the algorithm (0, 1, 2, ...).\n   */\n\n  /**\n   * Solution event - fired for each solution found.\n   * @event Dlx#solution\n   * @type object\n   * @property {Solution} solution A solution to the matrix.\n   * @property {number} solutionIndex The index of this solution (0, 1, 2, ...).\n   */\n\n  const buildInternalStructure = (matrix, numPrimaryColumns) => {\n\n    numPrimaryColumns = numPrimaryColumns || (matrix[0] ? matrix[0].length : 0);\n\n    const root = new ColumnObject();\n    const colIndexToListHeader = new Map();\n\n    matrix.forEach((row, rowIndex) => {\n      let firstDataObjectInThisRow = null;\n      row.forEach((col, colIndex) => {\n        if (rowIndex === 0) {\n          const listHeader = new ColumnObject();\n          if (colIndex < numPrimaryColumns) {\n            root.appendColumnHeader(listHeader);\n          }\n          colIndexToListHeader.set(colIndex, listHeader);\n        }\n        if (col) {\n          const listHeader = colIndexToListHeader.get(colIndex);\n          const dataObject = new DataObject(listHeader, rowIndex);\n          if (firstDataObjectInThisRow)\n            firstDataObjectInThisRow.appendToRow(dataObject);\n          else\n            firstDataObjectInThisRow = dataObject;\n        }\n      });\n    });\n\n    return root\n  };\n\n  function* search(searchState) {\n\n    searchState.searchStep();\n\n    if (searchState.isEmpty()) {\n      if (searchState.currentSolution.length) {\n        searchState.solutionFound();\n        yield searchState.currentSolution.slice();\n      }\n      return\n    }\n\n    const c = chooseColumnWithFewestRows(searchState);\n    coverColumn(c);\n    for (let r = c.down; r !== c; r = r.down) {\n      searchState.pushRowIndex(r.rowIndex);\n      r.loopRight(j => coverColumn(j.listHeader));\n      yield* search(searchState);\n      r.loopLeft(j => uncoverColumn(j.listHeader));\n      searchState.popRowIndex();\n    }\n    uncoverColumn(c);\n  }\n\n  const chooseColumnWithFewestRows = searchState => {\n    let chosenColumn = null;\n    searchState.root.loopNext(column => {\n      if (!chosenColumn || column.numberOfRows < chosenColumn.numberOfRows) {\n        chosenColumn = column;\n      }\n    });\n    return chosenColumn\n  };\n\n  const coverColumn = c => {\n    c.unlinkColumnHeader();\n    c.loopDown(i => i.loopRight(j => j.listHeader.unlinkDataObject(j)));\n  };\n\n  const uncoverColumn = c => {\n    c.loopUp(i => i.loopLeft(j => j.listHeader.relinkDataObject(j)));\n    c.relinkColumnHeader();\n  };\n\n  class SearchState {\n\n    constructor(dlx, root) {\n      this.dlx = dlx;\n      this.root = root;\n      this.currentSolution = [];\n      this.stepIndex = 0;\n      this.solutionIndex = 0;\n    }\n\n    isEmpty() {\n      return this.root.nextColumnObject === this.root\n    }\n\n    pushRowIndex(rowIndex) {\n      this.currentSolution.push(rowIndex);\n    }\n\n    popRowIndex() {\n      this.currentSolution.pop();\n    }\n\n    searchStep() {\n      const e = {\n        partialSolution: this.currentSolution.slice(),\n        stepIndex: this.stepIndex++\n      };\n      this.dlx.emit('step', e);\n    }\n\n    solutionFound() {\n      const e = {\n        solution: this.currentSolution.slice(),\n        solutionIndex: this.solutionIndex++\n      };\n      this.dlx.emit('solution', e);\n    }\n  }\n\n  exports.Dlx = Dlx;\n  exports.solutionGenerator = solutionGenerator;\n  exports.solve = solve;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import * as R from 'ramda'\n\nconst samePoint = (p1, p2) =>\n  p1.x === p2.x && p1.y === p2.y\n\nconst sameLine = (l1, l2) =>\n  (samePoint(l1.p1, l2.p1) && samePoint(l1.p2, l2.p2)) ||\n  (samePoint(l1.p1, l2.p2) && samePoint(l1.p2, l2.p1))\n\nconst reverseLine = line => ({\n  p1: {\n    x: line.p2.x,\n    y: line.p2.y\n  },\n  p2: {\n    x: line.p1.x,\n    y: line.p1.y\n  }\n})\n\nconst lineDirection = ({ p1, p2 }) => {\n  if (p1.x === p2.x) return p1.y < p2.y ? 'D' : 'U'\n  if (p1.y === p2.y) return p1.x < p2.x ? 'R' : 'L'\n}\n\nconst calculateAllLines = (location, cells) =>\n  R.chain(\n    cell => {\n      const x = location.x + cell.x\n      const y = location.y + cell.y\n      const tl = { x, y }\n      const tr = { x: x + 1, y }\n      const br = { x: x + 1, y: y + 1 }\n      const bl = { x, y: y + 1 }\n      return [\n        { p1: tl, p2: tr },\n        { p1: tr, p2: br },\n        { p1: br, p2: bl },\n        { p1: bl, p2: tl }\n      ]\n    },\n    cells)\n\nconst eliminateInternalLines = lines => {\n  const countOccurrencesOfLine = line1 =>\n    lines.filter(line2 => sameLine(line1, line2)).length\n  return lines.filter(line => countOccurrencesOfLine(line) === 1)\n}\n\n// TODO: use recursion to make this functional\nconst orderBoundaryLines = lines => {\n  let currentLine = lines[0]\n  let otherPoint = currentLine.p2\n  const startingPoint = currentLine.p1\n  const results = [currentLine]\n  for (; ;) {\n    if (samePoint(otherPoint, startingPoint)) break\n    currentLine = lines\n      .filter(line1 => !results.find(line2 => sameLine(line1, line2)))\n      .find(line => samePoint(line.p1, otherPoint) || samePoint(line.p2, otherPoint))\n    const p1Matched = samePoint(currentLine.p1, otherPoint)\n    otherPoint = p1Matched ? currentLine.p2 : currentLine.p1\n    results.push(p1Matched ? currentLine : reverseLine(currentLine))\n  }\n  return results\n}\n\n// TODO: use recursion to make this functional\nconst consolidateBoundaryLines = lines => {\n  const result = []\n  const furthestLineIndexMaintainingDirection = (originalDirection, fromLineIndex) => {\n    for (let lineIndex = fromLineIndex + 1; lineIndex < lines.length; lineIndex++) {\n      const nextLine = lines[lineIndex]\n      const nextDirection = lineDirection(nextLine)\n      if (nextDirection !== originalDirection) {\n        return lineIndex\n      }\n    }\n    return 0\n  }\n  for (let lineIndex = 0; lineIndex < lines.length;) {\n    const line = lines[lineIndex]\n    const p1 = line.p1\n    lineIndex = furthestLineIndexMaintainingDirection(lineDirection(line), lineIndex)\n    const p2 = lines[lineIndex].p1\n    result.push({ p1, p2 })\n    if (lineIndex === 0) break\n  }\n  return result\n}\n\nexport const calculateBoundary = R.pipe(\n  calculateAllLines,\n  eliminateInternalLines,\n  orderBoundaryLines,\n  consolidateBoundaryLines\n)\n","import * as R from 'ramda'\nimport { calculateBoundary } from './boundaryUtils'\n\nconst GRID_LINE_WIDTH = 1\nconst ROOM_BORDER_WIDTH = 4\nconst TX = ROOM_BORDER_WIDTH / 2\nconst TY = ROOM_BORDER_WIDTH / 2\n\nconst createSvgElement = (elementName, additionalAttributes = {}) => {\n  const element = document.createElementNS('http://www.w3.org/2000/svg', elementName)\n  Object.entries(additionalAttributes).forEach(([name, value]) =>\n    element.setAttribute(name, value))\n  return element\n}\n\nconst drawHorizontalGridLines = (gridElement, size, puzzle) => {\n  const squareSize = (size - 2 * TX) / puzzle.width\n  const ys = R.range(0, puzzle.height + 1)\n  ys.forEach(y => {\n    const gridLine = createSvgElement('line', {\n      x1: 0,\n      y1: TY + y * squareSize,\n      x2: size,\n      y2: TY + y * squareSize,\n      'class': 'grid-line',\n      'stroke-width': GRID_LINE_WIDTH\n    })\n    gridElement.appendChild(gridLine)\n  })\n}\n\nconst drawVerticalGridLines = (gridElement, size, puzzle) => {\n  const squareSize = (size - 2 * TY) / puzzle.height\n  const xs = R.range(0, puzzle.width + 1)\n  xs.forEach(x => {\n    const gridLine = createSvgElement('line', {\n      x1: TX + x * squareSize,\n      y1: 0,\n      x2: TX + x * squareSize,\n      y2: size,\n      'class': 'grid-line',\n      'stroke-width': GRID_LINE_WIDTH\n    })\n    gridElement.appendChild(gridLine)\n  })\n}\n\nconst toSvgPoints = (size, puzzle, lines) => {\n  const squareSize = (size - 2 * TY) / puzzle.width\n  const points = lines\n    .map(line => line.p1)\n  const p0 = R.head(points)\n  const closedPoints = R.append(p0, points)\n  const svgPoints = closedPoints\n    .map(p => ({\n      x: TX + p.x * squareSize,\n      y: TY + p.y * squareSize\n    }))\n  return svgPoints.map(p => `${p.x},${p.y}`).join(' ')\n}\n\nconst drawRoomBoundary = (gridElement, size, puzzle, room) => {\n  const location = { x: 0, y: 0 }\n  const cells = room.cells.map(cell => cell.coords)\n  const lines = calculateBoundary(location, cells)\n  const points = toSvgPoints(size, puzzle, lines)\n  const polylineElement = createSvgElement('polyline', {\n    points,\n    'stroke-width': ROOM_BORDER_WIDTH,\n    'class': 'room-border'\n  })\n  gridElement.appendChild(polylineElement)\n}\n\nconst drawRoomBoundaries = (gridElement, size, puzzle) =>\n  puzzle.rooms.map(room => drawRoomBoundary(gridElement, size, puzzle, room))\n\nconst drawValue = (gridElement, size, puzzle, coords, value, isInitialValue) => {\n  const squareSize = (size - GRID_LINE_WIDTH) / puzzle.width\n  const textElement = createSvgElement('text', {\n    x: TX + coords.x * squareSize + squareSize / 2,\n    y: TY + coords.y * squareSize + squareSize / 2,\n    'dominant-baseline': 'central',\n    'text-anchor': 'middle',\n    'class': isInitialValue ? 'initial-value' : 'calculated-value',\n    'data-coords': `${coords.x}-${coords.y}`,\n    'data-is-initial-value': isInitialValue\n  })\n  const textNode = document.createTextNode(value)\n  textElement.appendChild(textNode)\n  gridElement.appendChild(textElement)\n}\n\nconst drawInitialValues = (gridElement, size, puzzle) => {\n  const cellsWithInitialValues = R.chain(\n    room => R.filter(\n      cell => !!cell.initialValue,\n      room.cells\n    ),\n    puzzle.rooms)\n  cellsWithInitialValues.forEach(cell =>\n    drawValue(gridElement, size, puzzle, cell.coords, cell.initialValue, true))\n}\n\nconst clearCalculatedValues = gridElement => {\n  const calculatedValues = gridElement.querySelectorAll('text[data-is-initial-value=false]')\n  calculatedValues.forEach(calculatedValue => gridElement.removeChild(calculatedValue))\n}\n\nconst drawCalculatedValues = (gridElement, size, puzzle, solution) => {\n  clearCalculatedValues(gridElement)\n  const cellsWithCalculatedValues = solution.filter(cell => !cell.isInitialValue)\n  cellsWithCalculatedValues.forEach(cell =>\n    drawValue(gridElement, size, puzzle, cell.coords, cell.value, false))\n}\n\nexport const drawInitialGrid = (puzzle) => {\n  const gridElement = document.getElementById('grid')\n  const size = gridElement.getBoundingClientRect().width\n  gridElement.style.height = size\n  drawHorizontalGridLines(gridElement, size, puzzle)\n  drawVerticalGridLines(gridElement, size, puzzle)\n  drawRoomBoundaries(gridElement, size, puzzle)\n  drawInitialValues(gridElement, size, puzzle)\n}\n\nexport const drawSolution = (puzzle, solution) => {\n  const gridElement = document.getElementById('grid')\n  const size = gridElement.getBoundingClientRect().width\n  drawCalculatedValues(gridElement, size, puzzle, solution)\n}\n\nexport const clearGrid = () => {\n  const gridElement = document.getElementById('grid')\n  const children = Array.from(gridElement.children)\n  children.forEach(child => gridElement.removeChild(child))\n}\n","import { parsePuzzle } from '../common/parsePuzzle'\nimport { SAMPLE_PUZZLE_8x8, SAMPLE_PUZZLE_10x10 } from '../common/samplePuzzles'\nimport { solve } from '../common/solve'\nimport { drawInitialGrid, drawSolution, clearGrid } from './svg'\n\nconst selectPuzzleElement = document.getElementById('selectPuzzle')\nconst solveButtonElement = document.getElementById('solve')\nconst cancelButtonElement = document.getElementById('cancel')\nconst stepsContainerElement = document.getElementById('stepsContainer')\nconst stepCountElement = document.getElementById('stepCount')\n\nlet puzzle = undefined\nlet solving = false\nlet queue = undefined\nlet intervalId = undefined\nlet showStepCount = false\nlet stepCount = undefined\n\nconst onSelectPuzzle = e => {\n  switch (e.target.value) {\n    case \"8x8\": return selectPuzzle(SAMPLE_PUZZLE_8x8)\n    case \"10x10\": return selectPuzzle(SAMPLE_PUZZLE_10x10)\n  }\n}\n\nconst onSearchStep = partialSolution =>\n  queue.push(partialSolution)\n\nconst onSolutionFound = solution =>\n  queue.push(solution)\n\nconst onInterval = () => {\n  if (queue && queue.length) {\n    stepCountElement.innerText = stepCount++\n    const partialSolution = queue.shift()\n    drawSolution(puzzle, partialSolution)\n  } else {\n    stopSolving()\n  }\n}\n\nconst onSolve = () => {\n  startSolving()\n}\n\nconst onCancel = () => {\n  stopSolving()\n}\n\nconst startSolving = () => {\n  queue = []\n  intervalId = setInterval(onInterval, 100)\n  showStepCount = true\n  stepCount = 0\n  solving = true\n  updateUiState()\n  solve(puzzle, onSearchStep, onSolutionFound)\n}\n\nconst stopSolving = () => {\n  clearInterval(intervalId)\n  queue = undefined\n  intervalId = undefined\n  solving = false\n  updateUiState()\n}\n\nconst selectPuzzle = selectedPuzzle => {\n  puzzle = parsePuzzle(selectedPuzzle)\n  clearGrid()\n  drawInitialGrid(puzzle)\n  showStepCount = false\n  updateUiState()\n}\n\nconst updateUiState = () => {\n  solveButtonElement.disabled = solving\n  cancelButtonElement.disabled = !solving\n  selectPuzzleElement.disabled = solving\n  stepsContainerElement.style.display = showStepCount ? '' : 'none'\n}\n\nselectPuzzleElement.addEventListener('change', onSelectPuzzle)\nsolveButtonElement.addEventListener('click', onSolve)\ncancelButtonElement.addEventListener('click', onCancel)\n\nselectPuzzle(SAMPLE_PUZZLE_8x8)\n"],"sourceRoot":""}